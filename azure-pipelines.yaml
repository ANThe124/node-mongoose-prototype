trigger:
- refactor

resources:
- repo: self

variables:
  imageRepo: 'mkivo/node-mongoose-prototype'
  tag: refactor #'$(Build.BuildId)'
  

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-latest
    steps: 
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub Connection'
        repository: $(imageRepo)
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
          
    # - task: PublishBuildArtifacts@1
    #   displayName: Publish Kubernetes Manifests
    #   inputs:
    #     PathtoPublish: '$(Build.SourcesDirectory)/kubernetes'
    #     ArtifactName: 'manifests'
    #     publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

    - task: AzureKeyVault@2
      displayName: Unlock Key Vault
      inputs:
        azureSubscription: 'Deployments Service Connection'
        KeyVaultName: 'nmp-pipeline-keys'
        SecretsFilter: '*'
        RunAsPreJob: true

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool: 
        vmImage: ubuntu-latest
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - script: 
        env:
          PORT: $(PORT)
          CONN_STR: $(DB-STR)
      
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'staging-nmp-nmp-cluster-default-1679573575997'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: 'dockerhub-secret'
          dockerRegistryEndpoint: 'Docker Hub Connection'
          
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'staging-nmp-nmp-cluster-default-1679573575997'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yaml'
            $(Pipeline.Workspace)/manifests/service.yaml'




    


